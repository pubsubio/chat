// Copyright 2011 Google Inc. All Rights Reserved.

// This file was generated from .js source files by SCons.  If you
// want to make changes to this file you should either change the
// javascript source files or the SConstruct script.

#include "v8.h"
#include "natives.h"
#include "utils.h"

namespace v8 {
namespace internal {

  static const byte sources[] = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 103, 108, 111, 98, 97, 108, 46, 80, 114, 111, 120, 121, 61, 110, 101, 119, 32, 36, 79, 98, 106, 101, 99, 116, 40, 41, 59, 10, 10, 118, 97, 114, 32, 36, 80, 114, 111, 120, 121, 61, 103, 108, 111, 98, 97, 108, 46, 80, 114, 111, 120, 121, 10, 10, 118, 97, 114, 32, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 84, 114, 97, 112, 115, 61, 91, 10, 34, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 34, 44, 10, 34, 103, 101, 116, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 34, 44, 10, 34, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 78, 97, 109, 101, 115, 34, 44, 10, 34, 103, 101, 116, 80, 114, 111, 112, 101, 114, 116, 121, 78, 97, 109, 101, 115, 34, 44, 10, 34, 100, 101, 102, 105, 110, 101, 80, 114, 111, 112, 101, 114, 116, 121, 34, 44, 10, 34, 100, 101, 108, 101, 116, 101, 34, 44, 10, 34, 102, 105, 120, 34, 44, 10, 93, 10, 10, 118, 97, 114, 32, 100, 101, 114, 105, 118, 101, 100, 84, 114, 97, 112, 115, 61, 91, 10, 34, 104, 97, 115, 34, 44, 10, 34, 104, 97, 115, 79, 119, 110, 34, 44, 10, 34, 103, 101, 116, 34, 44, 10, 34, 115, 101, 116, 34, 44, 10, 34, 101, 110, 117, 109, 101, 114, 97, 116, 101, 34, 44, 10, 34, 107, 101, 121, 115, 34, 44, 10, 93, 10, 10, 118, 97, 114, 32, 102, 117, 110, 99, 116, 105, 111, 110, 84, 114, 97, 112, 115, 61, 91, 10, 34, 99, 97, 108, 108, 84, 114, 97, 112, 34, 44, 10, 34, 99, 111, 110, 115, 116, 114, 117, 99, 116, 84, 114, 97, 112, 34, 44, 10, 93, 10, 10, 36, 80, 114, 111, 120, 121, 46, 99, 114, 101, 97, 116, 101, 70, 117, 110, 99, 116, 105, 111, 110, 61, 102, 117, 110, 99, 116, 105, 111, 110, 40, 97, 44, 98, 44, 99, 41, 123, 10, 97, 46, 99, 97, 108, 108, 84, 114, 97, 112, 61, 98, 10, 97, 46, 99, 111, 110, 115, 116, 114, 117, 99, 116, 84, 114, 97, 112, 61, 99, 10, 36, 80, 114, 111, 120, 121, 46, 99, 114, 101, 97, 116, 101, 40, 97, 41, 10, 125, 10, 10, 36, 80, 114, 111, 120, 121, 46, 99, 114, 101, 97, 116, 101, 61, 102, 117, 110, 99, 116, 105, 111, 110, 40, 97, 44, 98, 41, 123, 10, 105, 102, 40, 33, 40, 37, 95, 73, 115, 83, 112, 101, 99, 79, 98, 106, 101, 99, 116, 40, 97, 41, 41, 41, 10, 116, 104, 114, 111, 119, 32, 77, 97, 107, 101, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 104, 97, 110, 100, 108, 101, 114, 95, 110, 111, 110, 95, 111, 98, 106, 101, 99, 116, 34, 44, 91, 34, 99, 114, 101, 97, 116, 101, 34, 93, 41, 10, 105, 102, 40, 33, 40, 37, 95, 73, 115, 83, 112, 101, 99, 79, 98, 106, 101, 99, 116, 40, 98, 41, 41, 41, 98, 61, 110, 117, 108, 108, 10, 114, 101, 116, 117, 114, 110, 32, 37, 67, 114, 101, 97, 116, 101, 74, 83, 80, 114, 111, 120, 121, 40, 97, 44, 98, 41, 10, 125, 10, 10, 10, 10, 10, 10, 10, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 68, 101, 114, 105, 118, 101, 100, 71, 101, 116, 84, 114, 97, 112, 40, 97, 44, 98, 41, 123, 10, 118, 97, 114, 32, 99, 61, 116, 104, 105, 115, 46, 103, 101, 116, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 40, 98, 41, 10, 105, 102, 40, 40, 116, 121, 112, 101, 111, 102, 40, 99, 41, 61, 61, 61, 39, 117, 110, 100, 101, 102, 105, 110, 101, 100, 39, 41, 41, 123, 114, 101, 116, 117, 114, 110, 32, 99, 125, 10, 105, 102, 40, 39, 118, 97, 108, 117, 101, 39, 105, 110, 32, 99, 41, 123, 10, 114, 101, 116, 117, 114, 110, 32, 99, 46, 118, 97, 108, 117, 101, 10, 125, 101, 108, 115, 101, 123, 10, 105, 102, 40, 40, 116, 121, 112, 101, 111, 102, 40, 99, 46, 103, 101, 116, 41, 61, 61, 61, 39, 117, 110, 100, 101, 102, 105, 110, 101, 100, 39, 41, 41, 123, 114, 101, 116, 117, 114, 110, 32, 99, 46, 103, 101, 116, 125, 10, 10, 114, 101, 116, 117, 114, 110, 32, 37, 95, 67, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 40, 97, 44, 99, 46, 103, 101, 116, 41, 10, 125, 10, 125, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 68, 101, 114, 105, 118, 101, 100, 83, 101, 116, 84, 114, 97, 112, 40, 97, 44, 98, 44, 99, 41, 123, 10, 118, 97, 114, 32, 100, 61, 116, 104, 105, 115, 46, 103, 101, 116, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 40, 98, 41, 10, 105, 102, 40, 100, 41, 123, 10, 105, 102, 40, 39, 119, 114, 105, 116, 97, 98, 108, 101, 39, 105, 110, 32, 100, 41, 123, 10, 105, 102, 40, 100, 46, 119, 114, 105, 116, 97, 98, 108, 101, 41, 123, 10, 100, 46, 118, 97, 108, 117, 101, 61, 99, 10, 116, 104, 105, 115, 46, 100, 101, 102, 105, 110, 101, 80, 114, 111, 112, 101, 114, 116, 121, 40, 98, 44, 100, 41, 10, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 10, 125, 101, 108, 115, 101, 123, 10, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 10, 125, 10, 125, 101, 108, 115, 101, 123, 10, 105, 102, 40, 100, 46, 115, 101, 116, 41, 123, 10, 10, 37, 95, 67, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 40, 97, 44, 99, 44, 100, 46, 115, 101, 116, 41, 10, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 10, 125, 101, 108, 115, 101, 123, 10, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 10, 125, 10, 125, 10, 125, 10, 100, 61, 116, 104, 105, 115, 46, 103, 101, 116, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 40, 98, 41, 10, 105, 102, 40, 100, 41, 123, 10, 105, 102, 40, 39, 119, 114, 105, 116, 97, 98, 108, 101, 39, 105, 110, 32, 100, 41, 123, 10, 105, 102, 40, 100, 46, 119, 114, 105, 116, 97, 98, 108, 101, 41, 123, 10, 10, 125, 101, 108, 115, 101, 123, 10, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 10, 125, 10, 125, 101, 108, 115, 101, 123, 10, 105, 102, 40, 100, 46, 115, 101, 116, 41, 123, 10, 10, 37, 95, 67, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 40, 97, 44, 99, 44, 100, 46, 115, 101, 116, 41, 10, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 10, 125, 101, 108, 115, 101, 123, 10, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 10, 125, 10, 125, 10, 125, 10, 116, 104, 105, 115, 46, 100, 101, 102, 105, 110, 101, 80, 114, 111, 112, 101, 114, 116, 121, 40, 98, 44, 123, 10, 118, 97, 108, 117, 101, 58, 99, 44, 10, 119, 114, 105, 116, 97, 98, 108, 101, 58, 116, 114, 117, 101, 44, 10, 101, 110, 117, 109, 101, 114, 97, 98, 108, 101, 58, 116, 114, 117, 101, 44, 10, 99, 111, 110, 102, 105, 103, 117, 114, 97, 98, 108, 101, 58, 116, 114, 117, 101, 125, 41, 59, 10, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 125, 10, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 68, 101, 114, 105, 118, 101, 100, 72, 97, 115, 84, 114, 97, 112, 40, 97, 41, 123, 10, 114, 101, 116, 117, 114, 110, 33, 33, 116, 104, 105, 115, 46, 103, 101, 116, 80, 114, 111, 112, 101, 114, 116, 121, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 40, 97, 41, 10, 125, 10, 10 };

  static const char* raw_sources = reinterpret_cast<const char*>(sources);

  template <>
  int NativesCollection<EXPERIMENTAL>::GetBuiltinsCount() {
    return 1;
  }

  template <>
  int NativesCollection<EXPERIMENTAL>::GetDebuggerCount() {
    return 0;
  }

  template <>
  int NativesCollection<EXPERIMENTAL>::GetIndex(const char* name) {
    if (strcmp(name, "proxy") == 0) return 0;
    return -1;
  }

  template <>
  int NativesCollection<EXPERIMENTAL>::GetRawScriptsSize() {
    return 1477;
  }

  template <>
  Vector<const char> NativesCollection<EXPERIMENTAL>::GetRawScriptSource(int index) {
    if (index == 0) return Vector<const char>(raw_sources + 0, 1477);
    return Vector<const char>("", 0);
  }

  template <>
  Vector<const char> NativesCollection<EXPERIMENTAL>::GetScriptName(int index) {
    if (index == 0) return Vector<const char>("native proxy.js", 15);
    return Vector<const char>("", 0);
  }

  template <>
  Vector<const byte> NativesCollection<EXPERIMENTAL>::GetScriptsSource() {
    return Vector<const byte>(sources, 1477);
  }

  template <>
  void NativesCollection<EXPERIMENTAL>::SetRawScriptsSource(Vector<const char> raw_source) {
    ASSERT(1477 == raw_source.length());
    raw_sources = raw_source.start();
  }

}  // internal
}  // v8
